version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: credipesca_postgres
    environment:
      POSTGRES_DB: credipesca_db
      POSTGRES_USER: credipesca_user
      POSTGRES_PASSWORD: credipesca_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - credipesca_network
    restart: unless-stopped

  # Redis (para cache futuro)
  redis:
    image: redis:7-alpine
    container_name: credipesca_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - credipesca_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: credipesca_backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://credipesca_user:credipesca_password@postgres:5432/credipesca_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-here
      PORT: 3001
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - credipesca_network
    restart: unless-stopped
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: credipesca_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - credipesca_network
    restart: unless-stopped
    command: npm run dev

  # Nginx (opcional - para produção)
  nginx:
    image: nginx:alpine
    container_name: credipesca_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - credipesca_network
    profiles:
      - production
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  credipesca_network:
    driver: bridge 